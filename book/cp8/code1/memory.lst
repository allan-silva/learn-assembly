     1                                  ;memory.asm
     2                                  section .data
     3 00000000 7B                          bNum    db  123
     4 00000001 3930                        wNum    dw  12345
     5 00000003 0000<rept>                  warray  times   5 dw 0  ;array of 5 words containing 0
     6                                      
     7 0000000D 39300000                    dNum    dd 12345
     8 00000011 3930000000000000            qNum1   dq 12345
     9 00000019 61626300                    text1   db "abc", 0
    10 0000001D 50455254FB210940            qNum2   dq 3.141592654
    11 00000025 63646500                    text2   db "cde", 0
    12                                  section .bss
    13 00000000 <res 00000001>              bvar    resb    1
    14 00000001 <res 00000004>              dvar    resd    1
    15 00000005 <res 00000014>              wvar    resw    10
    16 00000019 <res 00000018>              qvar    resq    3
    17                                  section .text
    18                                      global main
    19                                  main:
    20 00000000 55                          push rbp
    21 00000001 4889E5                      mov rbp, rsp
    22                                      
    23 00000004 488D0425[00000000]          lea rax, [bNum] ;load address of bNum in rax
    24 0000000C 48B8-                       mov rax, bNum   ;load address of bNum in rax
    24 0000000E [0000000000000000] 
    25                                      
    26 00000016 4831C0                      xor rax, rax    ;clear rax, once bNum is the rightmost byte os rax
    27 00000019 8A0425[00000000]            mov al, [bNum]  ;mov bNum to the lower 8 bits of rax (little endian)
    28                                  ;    mov rax, [bNum] ;load value of bNum in rax
    29                                      
    30                                  ;    mov [bvar], rax ;load from rax at address bvar
    31 00000020 880425[00000000]            mov [bvar], al  ;load to bvar, just the  al content (see line 28)
    32 00000027 488D0425[00000000]          lea rax, [bvar] ;load address of bvar in rax
    33                                      
    34 0000002F 488D0425[01000000]          lea rax, [wNum] ;load address of wNum in rax
    35 00000037 488B0425[01000000]          mov rax, [wNum] ;load content of wNum in rax
    36                                      
    37 0000003F 488D0425[19000000]          lea rax, [text1]    ;load address of text1 in rax
    38 00000047 48B8-                       mov rax, text1      ;load address of text1 in rax
    38 00000049 [1900000000000000] 
    39 00000051 48B8-                       mov rax, text1+1    ;load address second char in rax
    39 00000053 [1A00000000000000] 
    40 0000005B 488D0425[1A000000]          lea rax, [text1+1]  ;load address second char in rax
    41 00000063 488B0425[19000000]          mov rax, [text1]    ;load starting at text1 in rax
    42 0000006B 488B0425[1A000000]          mov rax, [text1+1]  ;load starting at text1+1 in rax
    43                                      
    44 00000073 4889EC                      mov rsp, rbp
    45 00000076 5D                          pop rbp
    46 00000077 C3                          ret
